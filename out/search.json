[
  {
    "objectID": "analysis/preprocess.html",
    "href": "analysis/preprocess.html",
    "title": "Pre-process",
    "section": "",
    "text": "Observed and interpolated subsistence rates are available for each city as geoTIFFs from NTU Dataverse.\nAlthough some Dataverse instances have an API, I couldn’t verify that this one does. Instead, you can download the dataset manually and place it in /data as dataverse_files.zip.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(sf)\n\n\nLinking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE\n\n\nCode\nlibrary(terra)\n\n\nterra 1.7.29\n\nAttaching package: 'terra'\n\nThe following object is masked from 'package:tidyr':\n\n    extract\n\n\nCode\nlibrary(tidyterra)\n\n\n\nAttaching package: 'tidyterra'\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nCode\nlibrary(here)\n\n\nhere() starts at /workspaces/report-sinking-cities\n\n\nLet’s first unzip the dataverse files:\n\n\nCode\n# unzip the downloaded dataverse zip\nunzip(\n  here(\"data\", \"dataverse_files.zip\"),\n  exdir = here(\"data\", \"src\"))\n\n# unzip each city\nlist.files(here(\"data\", \"src\"), pattern = glob2rx(\"*.zip\"),\n  full.names = TRUE) %&gt;%\n  walk(unzip, exdir = here(\"data\", \"src\"))\n\n# delete the city zip files\nunlink(here(\"data\", \"src\", \"*.zip\"), expand = TRUE)\n\n\nEach city has four geoTIFFs:\n\nvelocity_InSAR: the subsistence velocity observed using InSAR;\nvelocity_interpolation: the subsistence velocity interpolated between observations;\nvelocityStd_InSAR: the standard deviation of the observed velocity; and\nvelocityStd_interpolation: the standard deviation of the interpolated velocity.\n\n\n\n\n\n\n\nNote\n\n\n\nthe velocities and standard deviations of them are both in units of m yr-1. The paper’s figures present them in units of mm yr-1.\n\n\nFor each city, I want to:\n\nCombine the two velocity maps and the two SD maps;\nCalculate a normalised standard deviation\nMask the combined velocity map using bins of the combined SD map.\n\n\n\nCode\ntibble(\n  path = list.files(here(\"data\", \"src\"), pattern = glob2rx(\"*.tif\"),\n    full.names = TRUE),\n  fname = str_remove(basename(path), \".tif\")) %&gt;%\n  # discard the area bmsl files\n  filter(str_detect(fname, \"areaBMSL\", negate = TRUE)) %&gt;%\n  # extract filename info\n  separate(fname,\n    into = c(\"city_name\", \"city_code\", \"measure\", \"source\"),\n    sep = \"_\") -&gt;\ncity_maps\n\n\nWe’ll need to use {terra} or a similar raster package to do the above two tasks.\nFirst, we need functions to do the two tasks above:\n\n\nCode\n# combine_maps: load two geotiff paths in, merge and write back to disk.\n# return the output path\ncombine_maps &lt;- function(path_a, path_b, city, measure) {\n  out_path &lt;- here(\"data\", \"1-combined\", paste0(city, \"_\", measure, \".tif\"))\n\n  merge(rast(path_a), rast(path_b), filename = out_path, overwrite = TRUE)\n  return(out_path)\n}\n\n\n\n\nCode\nget_norm_sd &lt;- function(velocity_path, sd_path, city) {\n  out_path &lt;- here(\"data\", \"1-combined\",\n    paste0(city, \"_velocityNormStd\", \".tif\"))\n\n  norm_sd &lt;- rast(sd_path) / rast(velocity_path)\n  writeRaster(norm_sd, out_path, overwrite = TRUE)\n  return(out_path)\n}\n\n\n\n\nCode\n# mask_map: given a velocity raster and a normalised std deviation path,\n# clip the velocities to only contain cells with normalised SD within an\n# absolute range of low to high. return the path of the result (written to disk)\nmask_map &lt;- function(velocity_path, normsd_path, low, high, city, thresh_label) {\n  out_path &lt;- here(\"data\", \"2-masked\",\n    paste0(city, \"_\", thresh_label, \"p.tif\"))\n\n  vel &lt;- rast(velocity_path)\n  normsd &lt;- rast(normsd_path)\n  \n  # get an absolute value of the normalised sd\n  abs_normsd &lt;- ifel(normsd &lt; 0, -normsd, normsd)\n\n  # first mask the normalised sd to within the absolute threshold\n  normsd_thresh &lt;- ifel(abs_normsd &gt; high | abs_normsd &lt; low, NA, abs_normsd)\n\n  # then mask the velocity map based on the remaining normalised sd map\n  mask(vel, normsd_thresh, filename = out_path, overwrite = TRUE)\n\n  return(out_path)\n}\n\n\n\n\nCode\ndir.create(here(\"data\", \"1-combined\"), showWarnings = FALSE)\ndir.create(here(\"data\", \"2-masked\"), showWarnings = FALSE)\n\ncity_maps %&gt;%\n  group_by(city_name, measure) %&gt;%\n  # TODO - assert two rows per group\n  summarise(\n    path = combine_maps(path[1], \n      path[2], city_name[1], measure[1])) %&gt;%\n  ungroup() -&gt;\ncity_maps_combined\n\n\n`summarise()` has grouped output by 'city_name'. You can override using the\n`.groups` argument.\n\n\nCode\n# calculate the normalised standard deviations\ncity_maps_combined %&gt;%\n  # ensure velocity is first in each group and sd is second\n  arrange(measure) %&gt;%\n  group_by(city_name) %&gt;%\n  summarise(path = get_norm_sd(path[1], path[2], city_name[1])) %&gt;%\n  ungroup() %&gt;%\n  mutate(measure = \"velocityNormStd\") -&gt;\ncity_norm_sds\n\n# combine the normalised standard velocities with the velocities (drop the sds)\ncity_maps_combined %&gt;%\n  filter(measure == \"velocity\") %&gt;%\n  bind_rows(city_norm_sds) %&gt;%\n  arrange(city_name, measure) -&gt;\ncity_maps_all\n\n# now do the masking, in bins of normalised standard deviation:\n# 0-25%, 25-50%, 50-1005, &gt; 100%\ncity_maps_all %&gt;%\n  group_by(city_name) %&gt;%\n  summarise(\n    masked_path_0to25p =\n      mask_map(path[1], path[2], 0,    0.25, city_name[1], \"0to25p\"),\n    masked_path_25to50p =\n      mask_map(path[1], path[2], 0.25, 0.5,  city_name[1], \"25to50p\"),\n    masked_path_50to100p =\n      mask_map(path[1], path[2], 0.5,  1,    city_name[1], \"50to100p\"),\n    masked_path_gt100p =\n      mask_map(path[1], path[2], 1,    Inf,  city_name[1], \"gt100p\")) -&gt;\ncity_maps_masked\n\n\nWe also need to convert these TIFFs to PNGs for web display, and we need to run off their extents (along with the reference point KMLs) as a data frame to help us fit the PNGs on the map.\nBut before we do that, we’re going to reproject everything in data/2-masked to EPSG:3857 to see if it helps us reconcile Mapbox and DeckGL:\n\n\nCode\n# reproject_to_3857: read in a raster path and write back out reprojected\nreproject_to_3857 &lt;- function(path) {\n  out_path &lt;- here(\"data\", \"2a-masked-3857\", basename(path))\n  project(rast(path), \"epsg:3857\", gdal = FALSE, filename = out_path,\n    overwrite = TRUE)\n  return(out_path)\n}\n\n\nWe’ll use this function in a moment, before we get the map bounds (reprojected).\nFirst, let’s get the reference points:\n\n\nCode\ntibble(\n  path = list.files(here(\"data\", \"src\"), pattern = glob2rx(\"*.kml\"),\n    full.names = TRUE),\n  fname = basename(path)) %&gt;%\n  separate(fname, into = c(\"city\", \"code\", \"ref\"), sep = \"_\", remove = FALSE) %&gt;%\n  select(-code, -ref) %&gt;%\n  group_by(city) %&gt;%\n  # read kml files in\n  summarise(point = st_read(path)) %&gt;%\n  unpack(point) %&gt;%\n  # extract lat and lon\n  mutate(\n    coord = st_coordinates(geometry),\n    ref_lon = coord[, \"X\"],\n    ref_lat = coord[, \"Y\"]) %&gt;%\n  select(city, ref_lon, ref_lat) %&gt;%\n  print() -&gt;\nreference_points\n\n\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Abidjan_TA118_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: -4.04875 ymin: 5.45625 xmax: -4.04875 ymax: 5.45625\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Ahmedabad_TD034_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 72.66875 ymin: 23.06875 xmax: 72.66875 ymax: 23.06875\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Alexandria_TD065_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 29.81792 ymin: 30.99958 xmax: 29.81792 ymax: 30.99958\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Bangkok_TD062_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 100.6546 ymin: 13.76625 xmax: 100.6546 ymax: 13.76625\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Barcelona_TA132_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 2.13375 ymin: 41.41125 xmax: 2.13375 ymax: 41.41125\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/BuenosAires_TD170_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: -58.52125 ymin: -34.61208 xmax: -58.52125 ymax: -34.61208\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Chennai_TD092_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 80.11792 ymin: 13.18375 xmax: 80.11792 ymax: 13.18375\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Chittagong_TD077_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 91.83208 ymin: 22.37458 xmax: 91.83208 ymax: 22.37458\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Dalian_TA098_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 121.9987 ymin: 39.32875 xmax: 121.9987 ymax: 39.32875\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/DaresSalaam_TD006_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 39.16292 ymin: -6.837917 xmax: 39.16292 ymax: -6.837917\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Dhaka_TD150_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 90.42208 ymin: 23.80792 xmax: 90.42208 ymax: 23.80792\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Dongguan_TA011_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 114.0354 ymin: 22.95792 xmax: 114.0354 ymax: 22.95792\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Foshan_TA011_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 113.0962 ymin: 23.09625 xmax: 113.0962 ymax: 23.09625\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Fukuoka_TD163_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 130.6696 ymin: 33.61875 xmax: 130.6696 ymax: 33.61875\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Guangzhou_TA011_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 113.3004 ymin: 23.23625 xmax: 113.3004 ymax: 23.23625\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Hangzhou_TA069_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 120.2229 ymin: 29.96792 xmax: 120.2229 ymax: 29.96792\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/HoChiMinhCity_TD018_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 106.5921 ymin: 10.81708 xmax: 106.5921 ymax: 10.81708\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/HongKong_TA011_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 114.1729 ymin: 22.51542 xmax: 114.1729 ymax: 22.51542\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Houston_TD143_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: -95.27125 ymin: 29.79958 xmax: -95.27125 ymax: 29.79958\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Istanbul_TD138_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 28.87042 ymin: 41.08625 xmax: 28.87042 ymax: 41.08625\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Jakarta_TA098_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 106.8754 ymin: -6.34125 xmax: 106.8754 ymax: -6.34125\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Karachi_TD078_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 67.15625 ymin: 24.93458 xmax: 67.15625 ymax: 24.93458\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Kolkata_TD048_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 88.47875 ymin: 22.72208 xmax: 88.47875 ymax: 22.72208\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Lagos_TD095_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 3.30625 ymin: 6.62125 xmax: 3.30625 ymax: 6.62125\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Lima_TD069_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: -76.95958 ymin: -12.04958 xmax: -76.95958 ymax: -12.04958\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/London_TD081_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: -0.07458351 ymin: 51.54708 xmax: -0.07458351 ymax: 51.54708\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/LosAngeles_TD071_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: -118.2438 ymin: 34.04292 xmax: -118.2438 ymax: 34.04292\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Luanda_TA131_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 13.40458 ymin: -9.064583 xmax: 13.40458 ymax: -9.064583\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Manila_TD032_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 120.9929 ymin: 14.70208 xmax: 120.9929 ymax: 14.70208\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Miami_TA048_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: -80.29625 ymin: 25.76542 xmax: -80.29625 ymax: 25.76542\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Mumbai_TD034_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 72.84542 ymin: 19.18292 xmax: 72.84542 ymax: 19.18292\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Nagoya_TD119_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 137.0104 ymin: 35.17458 xmax: 137.0104 ymax: 35.17458\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Nanjing_TA069_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 119.0237 ymin: 31.64292 xmax: 119.0237 ymax: 31.64292\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/NewYork_TA033_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: -73.85958 ymin: 40.72792 xmax: -73.85958 ymax: 40.72792\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Osaka_TD017_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 135.6787 ymin: 34.78958 xmax: 135.6787 ymax: 34.78958\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Philadelphia_TA106_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: -75.15958 ymin: 40.06292 xmax: -75.15958 ymax: 40.06292\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Qingdao_TD076_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 120.0229 ymin: 36.75458 xmax: 120.0229 ymax: 36.75458\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/RiodeJaneiro_TD155_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: -43.34958 ymin: -22.80792 xmax: -43.34958 ymax: -22.80792\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/SaintPetersburg_TD007_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 30.31542 ymin: 59.86292 xmax: 30.31542 ymax: 59.86292\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Seoul_TD134_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 126.9987 ymin: 37.59042 xmax: 126.9987 ymax: 37.59042\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Shanghai_TA171_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 121.2712 ymin: 31.02792 xmax: 121.2712 ymax: 31.02792\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Singapore_TD018_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.8737 ymin: 1.377917 xmax: 103.8737 ymax: 1.377917\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Surat_TD034_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 72.87542 ymin: 21.17458 xmax: 72.87542 ymax: 21.17458\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Suzhou_TA171_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 120.5137 ymin: 31.31458 xmax: 120.5137 ymax: 31.31458\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Tianjin_TD149_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 117.2537 ymin: 39.75875 xmax: 117.2537 ymax: 39.75875\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Tokyo_TD046_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 139.3146 ymin: 35.77458 xmax: 139.3146 ymax: 35.77458\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Washington,D.C._TA004_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: -77.02292 ymin: 38.90625 xmax: -77.02292 ymax: 38.90625\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nReading layer `referencepoint' from data source \n  `/workspaces/report-sinking-cities/data/src/Yangon_TD033_referencePoint.kml' \n  using driver `LIBKML'\nSimple feature collection with 1 feature and 12 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 96.13542 ymin: 16.95708 xmax: 96.13542 ymax: 16.95708\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n# A tibble: 48 × 3\n   city        ref_lon ref_lat\n   &lt;chr&gt;         &lt;dbl&gt;   &lt;dbl&gt;\n 1 Abidjan       -4.05    5.46\n 2 Ahmedabad     72.7    23.1 \n 3 Alexandria    29.8    31.0 \n 4 Bangkok      101.     13.8 \n 5 Barcelona      2.13   41.4 \n 6 BuenosAires  -58.5   -34.6 \n 7 Chennai       80.1    13.2 \n 8 Chittagong    91.8    22.4 \n 9 Dalian       122.     39.3 \n10 DaresSalaam   39.2    -6.84\n# ℹ 38 more rows\n\n\nNow, here’s a function to extract the domain and range of the raster file:\n\n\nCode\n# get_range_bounds: given a raster path, return a list containing:\n#   - the `min` and `max` values of the raster band\n#   - the \nget_range_bounds &lt;- function(path) {\n  \n  # open raster and get summary and extent\n  vel &lt;- rast(path)\n  vel_summary &lt;- summary(vel)\n\n  # extract raster range from summary\n  vel_min &lt;-\n    vel_summary %&gt;% pluck(1) %&gt;% str_remove(\"Min.   :\") %&gt;% as.numeric()\n  vel_max &lt;-\n    vel_summary %&gt;% pluck(6) %&gt;% str_remove(\"Max.   :\") %&gt;% as.numeric()\n\n  return(list(\n    min = vel_min,\n    max = vel_max,\n    xmin = xmin(vel),\n    xmax = xmax(vel),\n    ymin = ymin(vel),\n    ymax = ymax(vel)))\n}\n\n\nLet’s bring all that info together:\n\n\nCode\ndir.create(here(\"data\", \"2a-masked-3857\"), showWarnings = FALSE)\n\ncity_maps_masked %&gt;%\n  pivot_longer(starts_with(\"masked\"), names_to = \"measure\",\n    values_to = \"path\") %&gt;%\n  mutate(reprojected_path = map_chr(path, reproject_to_3857)) -&gt;\ncity_maps_reprojected\n\ncity_maps_reprojected %&gt;%\n  mutate(\n    range_bounds_latlon = map(path, get_range_bounds),\n    range_bounds_3857 = map(reprojected_path, get_range_bounds),\n    measure = str_remove(measure, \"masked_path_\"),\n    filename = basename(reprojected_path)) %&gt;%\n  unnest_wider(range_bounds_latlon) %&gt;%\n  rename(lon_min = xmin, lon_max = xmax, lat_min = ymin, lat_max = ymax) %&gt;%\n  select(-min, -max) %&gt;%\n  unnest_wider(range_bounds_3857) %&gt;%\n  # finally, merge in reference point data\n  left_join(reference_points, by = join_by(city_name == city),\n    multiple = \"all\") -&gt;\ncity_maps_info\n\n\nWarning: There were 328 warnings in `mutate()`.\nThe first warning was:\nℹ In argument: `range_bounds_latlon = map(path, get_range_bounds)`.\nCaused by warning:\n! [summary] used a sample\nℹ Run `dplyr::last_dplyr_warnings()` to see the 327 remaining warnings.\n\n\nWe want to ensure all the maps are made using a common, symmetrical colour scale. To do that, I’ll get a range that covers all of the cities’ data ranges, and I’ll push it out so that it’s symmetrical around zero:\n\n\nCode\ndir.create(here(\"data\", \"3-pngs\"), showWarnings = FALSE)\n\n# first, we need to settle on a common range that encompasses all the files\n# (and make it symmetrical around 0)\n# data_range &lt;- c(\n#   min(city_maps_info$min, na.rm = TRUE),\n#   max(city_maps_info$max, na.rm = TRUE)) %&gt;%\n#   abs() %&gt;%\n#   max()\n\n# compute breaks based on that range\n# number_colours &lt;- 10\n# palette_breaks &lt;- seq(-data_range, data_range, length.out = number_colours + 1)\n\n\nHere’s our plotting function:\n\n\nCode\n# plot_raster_png: save the raster as a png (using tidyterra to make applying\n# a common colour scale across files much easier).\n# note: we really need to ensure that the png's aspect ratio reflects the extent\n# of the tiff in order to get decent projection on the interactive map. i've\n# reprojected the tiff to web mercator (epsg:3857) JUST for apsect ratio\n# calculation.\nplot_raster_png &lt;- function(path, palette_breaks) {\n\n  vel &lt;- rast(path)\n  vel_3857 &lt;- project(vel, \"epsg:3857\")\n\n  # this might not work well because of polar distortion, but in lieu of\n  # knowing the actual panel aspect ratio, i'm going to work it out from the\n  # raster extent and see if it's a better fit than these square plots with\n  # lots of padding\n  vel_ext_3857 &lt;- ext(vel_3857)\n  aspect_ratio_3857 &lt;-\n    (vel_ext_3857[2] - vel_ext_3857[1]) /\n    (vel_ext_3857[4] - vel_ext_3857[3])\n\n  # use zero scale expansion + void theme to remove margins\n  vel_plot &lt;- ggplot() +\n    geom_spatraster(data = vel) +\n    scale_fill_fermenter(\n      type = \"div\",\n      palette = \"RdYlBu\",\n      direction = 1,\n      na.value = NA,\n      # use `breaks` and `limits` to supply our common breaks\n      # (and force all of them to be used)\n      breaks = palette_breaks,\n      limits = range(palette_breaks),\n      guide = NULL\n      ) +\n    # push plot out to edges of the panel\n    scale_x_continuous(expand = expansion(0, 0)) +\n    scale_y_continuous(expand = expansion(0, 0)) +\n    # remove backgrounds and other elements\n    theme_void() +\n    theme(\n      plot.background = element_blank(),\n      panel.background = element_blank())\n\n\n  # write to disk, varying the plot height based on the epsg:3857 aspect ratio\n  ggsave(\n    here(\"data\", \"3-pngs\", str_replace(basename(path), \".tif$\", \".png\")),\n    vel_plot,\n    width = 800,\n    height = 800 / aspect_ratio_3857,\n    units = \"px\")\n\n}\n\n\nLet’s do the export on each processed TIF now:\n\n\nCode\nnumber_colours &lt;- 10\n\ncity_maps_info %&gt;%\n  # compute city-specific ranges for the colour palettes\n  group_by(city_name) %&gt;%\n  mutate(\n    city_min = min(min, na.rm = TRUE),\n    city_max = max(max, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;%\n  mutate(\n    palette_max_abs = pmax(abs(city_min), abs(city_max)),\n    city_breaks = map(palette_max_abs,\n      ~ seq(-.x, .x, length.out = number_colours + 1)),\n    walk2(path, city_breaks, plot_raster_png)\n    ) %&gt;%\n  # export to csv (dropping paths)\n  select(filename, ref_lon, ref_lat, file_min = min, file_max = max,\n    palette_extent = palette_max_abs, lon_min, lon_max, lat_min, lat_max, xmin,\n    xmax, ymin, ymax) %&gt;%\n  write_csv(here(\"data\", \"map-bounds-extent.csv\"))\n\n\nSpatRaster resampled to ncells = 500976\nSpatRaster resampled to ncells = 500976\nSpatRaster resampled to ncells = 500976\nSpatRaster resampled to ncells = 500976\n\n\nSpatRaster resampled to ncells = 501320\nSpatRaster resampled to ncells = 501320\nSpatRaster resampled to ncells = 501320\nSpatRaster resampled to ncells = 501320\n\n\nSpatRaster resampled to ncells = 500465\nSpatRaster resampled to ncells = 500465\nSpatRaster resampled to ncells = 500465\nSpatRaster resampled to ncells = 500465\n\n\nSpatRaster resampled to ncells = 500588\nSpatRaster resampled to ncells = 500588\nSpatRaster resampled to ncells = 500588\nSpatRaster resampled to ncells = 500588\n\n\nSpatRaster resampled to ncells = 500535\nSpatRaster resampled to ncells = 500535\nSpatRaster resampled to ncells = 500535\nSpatRaster resampled to ncells = 500535\n\n\nSpatRaster resampled to ncells = 500308\nSpatRaster resampled to ncells = 500308\nSpatRaster resampled to ncells = 500308\nSpatRaster resampled to ncells = 500308\n\n\nSpatRaster resampled to ncells = 501034\nSpatRaster resampled to ncells = 501034\nSpatRaster resampled to ncells = 501034\nSpatRaster resampled to ncells = 501034\n\n\nSpatRaster resampled to ncells = 500736\nSpatRaster resampled to ncells = 500736\nSpatRaster resampled to ncells = 500736\nSpatRaster resampled to ncells = 500736\n\n\nSpatRaster resampled to ncells = 500520\nSpatRaster resampled to ncells = 500520\nSpatRaster resampled to ncells = 500520\nSpatRaster resampled to ncells = 500520\n\n\nSpatRaster resampled to ncells = 500858\nSpatRaster resampled to ncells = 500858\nSpatRaster resampled to ncells = 500858\nSpatRaster resampled to ncells = 500858\n\n\nSpatRaster resampled to ncells = 500797\nSpatRaster resampled to ncells = 500797\nSpatRaster resampled to ncells = 500797\nSpatRaster resampled to ncells = 500797\n\n\nSpatRaster resampled to ncells = 501095\nSpatRaster resampled to ncells = 501095\nSpatRaster resampled to ncells = 501095\nSpatRaster resampled to ncells = 501095\n\n\nSpatRaster resampled to ncells = 500760\nSpatRaster resampled to ncells = 500760\nSpatRaster resampled to ncells = 500760\nSpatRaster resampled to ncells = 500760\n\n\nSpatRaster resampled to ncells = 501808\nSpatRaster resampled to ncells = 501808\nSpatRaster resampled to ncells = 501808\nSpatRaster resampled to ncells = 501808\n\n\nSpatRaster resampled to ncells = 500832\nSpatRaster resampled to ncells = 500832\nSpatRaster resampled to ncells = 500832\nSpatRaster resampled to ncells = 500832\n\n\nSpatRaster resampled to ncells = 501147\nSpatRaster resampled to ncells = 501147\nSpatRaster resampled to ncells = 501147\nSpatRaster resampled to ncells = 501147\n\n\nSpatRaster resampled to ncells = 500904\nSpatRaster resampled to ncells = 500904\nSpatRaster resampled to ncells = 500904\nSpatRaster resampled to ncells = 500904\n\n\nSpatRaster resampled to ncells = 500400\nSpatRaster resampled to ncells = 500400\nSpatRaster resampled to ncells = 500400\nSpatRaster resampled to ncells = 500400\n\n\nSpatRaster resampled to ncells = 500536\nSpatRaster resampled to ncells = 500536\nSpatRaster resampled to ncells = 500536\nSpatRaster resampled to ncells = 500536\n\n\nSpatRaster resampled to ncells = 500488\nSpatRaster resampled to ncells = 500488\nSpatRaster resampled to ncells = 500488\nSpatRaster resampled to ncells = 500488\n\n\nSpatRaster resampled to ncells = 501160\nSpatRaster resampled to ncells = 501160\nSpatRaster resampled to ncells = 501160\nSpatRaster resampled to ncells = 501160\n\n\nSpatRaster resampled to ncells = 500703\nSpatRaster resampled to ncells = 500703\nSpatRaster resampled to ncells = 500703\nSpatRaster resampled to ncells = 500703\n\n\nSpatRaster resampled to ncells = 500816\nSpatRaster resampled to ncells = 500816\nSpatRaster resampled to ncells = 500816\nSpatRaster resampled to ncells = 500816"
  }
]